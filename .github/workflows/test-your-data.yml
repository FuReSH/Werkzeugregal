# This is a basic validation workflow for TESTING yaml data for tools and blackboxes

name: last check of YAML test data

on:
  push:
    branches: [ "main" ]
    paths:
     - 'test/**.yml'

jobs:
  test:
      runs-on: ubuntu-latest
      name: Test yaml-data
      strategy:
        # You can use PyPy versions in python-version.
        # For example, pypy-2.7 and pypy-3.8
        matrix:
          python-version: ["3.8"] #, "3.9", "3.10", "3.11]
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        # You can test your matrix by printing the current Python version
        - name: Display Python version
          run: python -c "import sys; print(sys.version)"
        - name: Install check-jsonschema tool
          run: pip install check-jsonschema
        - name: Validate tool or blackbox test data
          run: |
            # check if tool and blackbox directories exist
            DIR_TOOLS="test/tools"
            DIR_BACKBOXES="test/blackboxes"
            # if exist, validate all yaml files in the directories
            if[ -d "$DIR_TOOLS" ]
            then
              check-jsonschema -v --schemafile schemas/tool.schema.json $DIR_TOOLS/*
            else
              echo "Warning: '$DIR_TOOLS' NOT found."
            fi
            if[ -d "$DIR_BACKBOXES" ]
            then
              check-jsonschema -v --schemafile schemas/blackbox.schema.json $DIR_BACKBOXES/*
            else
              echo "Warning: '$DIR_BLACKBOXES' NOT found."
            fi
